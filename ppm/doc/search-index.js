var N=null,E="",T="t",U="u",searchIndex={};
var R=["invert","result","to_string","string","try_from","try_into","borrow_mut","borrow","type_id","typeid","formatter","Representation of a Pixel: RGB","Representation of a Image","Create a new Pixel","Get red Value of Pixel ","Get green Value of Pixel ","Get blue Value of Pixel ","Invert Pixel color","true_gray_scale","Convert a pixel into Gray Scale using an improved method…","basic_gray_scale","Convert a pixel into Gray Scale using basic ratio","Get height of Image","Get width of Image","new_with_file","Load Image with ppm file","save_to_ppm","Save Image to  ppm format with given filename","convert_image_to_gray","Convert Image into Gray Scale in Memory ( 9 to use basic…","Invert Image Color in Memory","to_owned","clone_into"];
searchIndex["docs"]={"doc":E,"i":[[3,"Pixel","docs",R[11],N,N],[3,"Image",E,R[12],N,N],[11,"new",E,R[13],0,[[["u8"]],["pixel"]]],[11,"red",E,R[14],0,[[["self"]],["u8"]]],[11,"green",E,R[15],0,[[["self"]],["u8"]]],[11,"blue",E,R[16],0,[[["self"]],["u8"]]],[11,R[0],E,R[17],0,[[["self"]]]],[11,R[18],E,R[19],0,[[["self"]]]],[11,R[20],E,R[21],0,[[["self"]]]],[11,"height",E,R[22],1,[[["self"]],["usize"]]],[11,"width",E,R[23],1,[[["self"]],["usize"]]],[11,R[24],E,R[25],1,[[["path"]],["image"]]],[11,R[26],E,R[27],1,[[["self"],["path"]]]],[11,R[28],E,R[29],1,[[["self"],["u8"]]]],[11,R[0],E,R[30],1,[[["self"]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[["self"]],[R[3]]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[["self"]],[R[3]]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["pixel"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[1]]]]],"p":[[3,"Pixel"],[3,"Image"]]};
searchIndex["lib"]={"doc":E,"i":[[3,"Pixel","lib",R[11],N,N],[3,"Image",E,R[12],N,N],[11,"new",E,R[13],0,[[["u8"]],["pixel"]]],[11,"red",E,R[14],0,[[["self"]],["u8"]]],[11,"green",E,R[15],0,[[["self"]],["u8"]]],[11,"blue",E,R[16],0,[[["self"]],["u8"]]],[11,R[0],E,R[17],0,[[["self"]]]],[11,R[18],E,R[19],0,[[["self"]]]],[11,R[20],E,R[21],0,[[["self"]]]],[11,"height",E,R[22],1,[[["self"]],["usize"]]],[11,"width",E,R[23],1,[[["self"]],["usize"]]],[11,R[24],E,R[25],1,[[["path"]],["image"]]],[11,R[26],E,R[27],1,[[["self"],["path"]]]],[11,R[28],E,R[29],1,[[["self"],["u8"]]]],[11,R[0],E,R[30],1,[[["self"]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[["self"]],[R[3]]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[["self"]],[R[3]]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["pixel"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[1]]]]],"p":[[3,"Pixel"],[3,"Image"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
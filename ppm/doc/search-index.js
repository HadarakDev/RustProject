var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","to_string","string","try_from","try_into","borrow_mut","borrow","type_id","typeid","formatter","Representation of a Pixel: RGB","true_gray_scale","basic_gray_scale","new_with_file","save_to_ppm","convert_image_to_gray","to_owned","clone_into"];
searchIndex["doc"]={"doc":E,"i":[[3,"Pixel","doc",R[10],N,N],[3,"Image",E,E,N,N],[11,"new",E,E,0,[[["u8"]],["pixel"]]],[11,"red",E,E,0,[[["self"]],["u8"]]],[11,"green",E,E,0,[[["self"]],["u8"]]],[11,"blue",E,E,0,[[["self"]],["u8"]]],[11,"invert",E,E,0,[[["self"]]]],[11,R[11],E,E,0,[[["self"]]]],[11,R[12],E,E,0,[[["self"]]]],[11,"height",E,E,1,[[["self"]],["usize"]]],[11,"width",E,E,1,[[["self"]],["usize"]]],[11,R[13],E,E,1,[[["path"]],["image"]]],[11,R[14],E,E,1,[[["self"],["path"]]]],[11,R[15],E,E,1,[[["self"],["u8"]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[["self"]],[R[2]]]],[11,R[3],E,E,0,[[[U]],[R[0]]]],[11,R[4],E,E,0,[[],[R[0]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[["self"]],[R[2]]]],[11,R[3],E,E,1,[[[U]],[R[0]]]],[11,R[4],E,E,1,[[],[R[0]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"clone",E,E,0,[[["self"]],["pixel"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[9]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[9]]],[R[0]]]]],"p":[[3,"Pixel"],[3,"Image"]]};
searchIndex["lib"]={"doc":E,"i":[[3,"Pixel","lib",R[10],N,N],[3,"Image",E,"Representation of a Image",N,N],[11,"new",E,"Create a new Pixel",0,[[["u8"]],["pixel"]]],[11,"red",E,"Get red Value of Pixel ",0,[[["self"]],["u8"]]],[11,"green",E,"Get green Value of Pixel ",0,[[["self"]],["u8"]]],[11,"blue",E,"Get blue Value of Pixel ",0,[[["self"]],["u8"]]],[11,"invert",E,"Invert Pixel color",0,[[["self"]]]],[11,R[11],E,"Convert a pixel into Gray Scale using an improved method…",0,[[["self"]]]],[11,R[12],E,"Convert a pixel into Gray Scale using basic ratio",0,[[["self"]]]],[11,"height",E,"Get height of Image",1,[[["self"]],["usize"]]],[11,"width",E,"Get width of Image",1,[[["self"]],["usize"]]],[11,R[13],E,"Load Image with ppm file",1,[[["path"]],["image"]]],[11,R[14],E,"Save Image to  ppm format with given filename",1,[[["self"],["path"]]]],[11,R[15],E,"Convert Image into Gray Scale in Memory ( 9 to use basic…",1,[[["self"],["u8"]]]],[11,"invert",E,"Invert Image Color in Memory",1,[[["self"]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[1],E,E,0,[[["self"]],[R[2]]]],[11,R[3],E,E,0,[[[U]],[R[0]]]],[11,R[4],E,E,0,[[],[R[0]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[1],E,E,1,[[["self"]],[R[2]]]],[11,R[3],E,E,1,[[[U]],[R[0]]]],[11,R[4],E,E,1,[[],[R[0]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"clone",E,E,0,[[["self"]],["pixel"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[9]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[9]]],[R[0]]]]],"p":[[3,"Pixel"],[3,"Image"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);